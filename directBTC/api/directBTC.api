syntax = "v1"

info (
	wrapCodeMsg: true
	title:       "directBTC API"
)

type (
	ListReq {
		//Number of items per page
		Limit int `json:"limit,example=10,default=10,range=[1:50]"`
		//Data offset
		Offset int `json:"offset,example=0,default=0"`
	}
	PageData {
		//Total data count
		Total int64 `json:"total,example=1234"`
		//Number of items per page, consistent with the request
		Limit int `json:"limit,example=10"`
		//Data offset, consistent with the request
		Offset int `json:"offset,example=0,default=0"`
	}
)

type (
	TaskListReq {
		ListReq
		//Status values for the query
		Status   []string `json:"status,optional,options=init|binded|receivedInEvm|approvedInEvm|rejectedInEvm"`
		OrderDir string   `json:"orderDir,options=asc|desc,default=desc"`
		Address  string   `json:"address,optional"`
	}
	TaskListResp {
		PageData
		Data []Task `json:"data"`
	}
	// Tasks {
	//  MemPool []Task `json:"memPool"`
	//  Mined   []Task `json:"mined"`
	// }
	Task {
		ID              uint64   `json:"id,example=1"`
		Hash            string   `json:"hash,example=27bcb9009c68b677e45700f035e9f2b79b1d57cba1b35a45d07234839dae446a"`
		TreasuryAddress []string `json:"treasuryAddress,example=["1FezX8fEuSU3LDsjxRKpAeyyrPUjyCs3ac","1MAvJ4pE1EkgN4CS7HFq7r65eoaTu8qxXM"]"`
		AmountSatoshi   string   `json:"amountSatoshi,example=111000000"`
		FeeSatoshi      string   `json:"feeSatoshi,example=100"`
		InputAddress    []string `json:"inputAddress,example=["1828upaDhq7PxgRLMGnvZDimzjfzxLpG9x","1PRhw1EnWJJ894qqSb8XrNKz1vtPw76kV5"]"`
		Status          string   `json:"status,example=binded,options=init|binded|receivedInEvm|approvedInEvm|rejectedInEvm"`
		BlockNumber     uint64   `json:"blockNumber,example=919346"`
		BlockTime       uint64   `json:"blockTime,example=1760624353"`
		// ConfirmNumber       uint64   `json:"confirmNumber,example=2"`
		// ConfirmThreshold    uint64   `json:"confirmThreshold,example=4"`
		BindedEvmAddress    string `json:"bindedEvmAddress,example=0xbf63Fba8137ce3043289f1BDbdC1700f65ee1aAD"`
		ChainId             uint64 `json:"chainId,example=1"`
		RecievedEventTxHash string `json:"recievedEventTxHash,example=0x5bcc753029e4a0b558e9cd04137f2e0692a9c1177b40bf7dd887b6aace476bc9"`
		AcceptedEventTxHash string `json:"acceptedEventTxHash,example=0x5bcc753029e4a0b558e9cd04137f2e0692a9c1177b40bf7dd887b6aace476bc9"`
		RejectedEventTxHash string `json:"rejectedEventTxHash,example=0x5bcc753029e4a0b558e9cd04137f2e0692a9c1177b40bf7dd887b6aace476bc9"`
		Signature           string `json:"signature,example=0x56a190efbf79ef6f4fd1144063715247bc052fbcc8e4e3ea42a6fd8d16d0c7ad46aa039ae232c23e2ef8b644b3d2339782fbb095bc5b9c7f36d458610d00a0941b"`
	}
)

type (
	BindEvmAddressReq {
		Message   string `json:"message"`
		Signature string `json:"signature,example=H3x5bM2MpXK9MyLLbIGWQjZQNTP6lfuIjmPqMrU7YZ5CCm5bS9L+zCtrfIOJaloDb0mf9QBSEDIs4UCd/jou1VI="`
	}
	BindEvmAddressResp {
		Message
	}
	Message {
		EvmAddress      string `json:"evmAddress,example=0xbf63Fba8137ce3043289f1BDbdC1700f65ee1aAD"`
		EvmChainId      uint64 `json:"evmChainId,example=1"`
		Amount          uint64 `json:"amount,example=1200300000"`
		SignAddress     string `json:"signAddress,example=1FezX8fEuSU3LDsjxRKpAeyyrPUjyCs3ac"`
		TransactionHash string `json:"transactionHash,example=27bcb9009c68b677e45700f035e9f2b79b1d57cba1b35a45d07234839dae446a"`
		Ts              uint64 `json:"ts,example=12323323"`
	}
)

@server (
	tags:   "task"
	prefix: /api/v1
)
service directBTC {
	@handler GetTaskList
	post /task/list (TaskListReq) returns (TaskListResp)

	@handler BindEvmAddress
	post /task/bind (BindEvmAddressReq) returns (BindEvmAddressResp)
}

